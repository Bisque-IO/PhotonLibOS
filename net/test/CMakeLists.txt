add_definitions(-w)

if(PHOTON_BUILD_SHARED)
    set(photon_link_lib photon_shared)
else()
    set(photon_link_lib photon_static)
endif()

add_executable(test-socket test.cpp)
target_link_libraries(test-socket PRIVATE ${photon_link_lib} ${testing_libs})
add_test(NAME test-socket COMMAND $<TARGET_FILE:test-socket>)

add_executable(test-dg-socket test-udp.cpp)
target_link_libraries(test-dg-socket PRIVATE ${photon_link_lib} ${testing_libs})
add_test(NAME test-dg-socket COMMAND $<TARGET_FILE:test-dg-socket>)

add_executable(test-sockpool test_sockpool.cpp)
target_link_libraries(test-sockpool PRIVATE ${photon_link_lib} ${testing_libs})
add_test(NAME test-sockpool COMMAND $<TARGET_FILE:test-sockpool>)

if(PHOTON_ENABLE_CURL)
    add_executable(test-curl test_curl.cpp)
    target_link_libraries(test-curl PRIVATE ${photon_link_lib} ${testing_libs})
    add_test(NAME test-curl COMMAND $<TARGET_FILE:test-curl>)
endif()

add_executable(test-server test-server.cpp)
target_link_libraries(test-server PRIVATE ${photon_link_lib} ${testing_libs})

add_executable(test-client test-client.cpp)
target_link_libraries(test-client PRIVATE ${photon_link_lib} ${testing_libs})

add_executable(test-ipv6 test-ipv6.cpp)
target_link_libraries(test-ipv6 PRIVATE ${photon_link_lib} ${testing_libs})
